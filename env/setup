#!/bin/sh

set -eu
cd "$(dirname $0)"

# Docker Toolbox がインストールされていなかったら中断
if ! ($(which docker > /dev/null) && $(which docker-machine > /dev/null)); then
  open 'https://www.docker.com/docker-toolbox'
  exit 1
fi

# Docker を起動する仮想マシンの環境設定を取得
eval $(docker-machine env default)

# 各イメージがビルドされていなかったらビルド
for IMAGE_NAME in "php56" "php56-apache" "laravel-dev"; do
  if ! (docker images | grep localhost:5000/$IMAGE_NAME > /dev/null); then
    docker build -t localhost:5000/$IMAGE_NAME ./docker/$IMAGE_NAME
  fi
done
# php56-apache-laravel だけ特殊
if ! (docker images | grep localhost:5000/php56-apache-laravel > /dev/null); then
  pushd ..
  cp env/docker/php56-apache-laravel/Dockerfile ./
  docker build -t localhost:5000/php56-apache-laravel .  # ビルド中に laravel ディレクトリを ADD するので、現在のパスでないと動かない
  rm ./Dockerfile
  popd
fi

# 各コンテナが起動してなかったら起動
if ! (docker ps | grep laravel-server > /dev/null); then
  docker run --name laravel-server -d -p 80:80 -v "$(cd ..; pwd)"/laravel:/workspace localhost:5000/php56-apache-laravel
fi
